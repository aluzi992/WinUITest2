<!-- Copyright (c) Microsoft Corporation and Contributors. -->
<!-- Licensed under the MIT License. -->

<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:Microsoft.UI.Xaml.Controls"
    xmlns:animatedvisuals="using:Microsoft.UI.Xaml.Controls.AnimatedVisuals" 
    xmlns:local="using:WinUITest2">

    <SolidColorBrush x:Key="WindowCaptionBackground">Transparent</SolidColorBrush>
    
    <!--
    下面这个Style，如果放在【当前资源文件】的第一位，则程序运行的时候报错
    在上面随便放一个东西（SolidColorBrush）之后就没事了
    -->

    <Style TargetType="TreeViewItem" x:Key="BINTreeViewItem">
        <Setter Property="Padding" Value="0,0,16,0" />
        <Setter Property="Background" Value="{ThemeResource TreeViewItemBackground}" />
        <Setter Property="BorderBrush" Value="{ThemeResource TreeViewItemBorderBrush}" />
        <Setter Property="BorderThickness" Value="{ThemeResource TreeViewItemBorderThemeThickness}" />
        <Setter Property="GlyphBrush" Value="{ThemeResource TreeViewItemForeground}" />
        <Setter Property="MinHeight" Value="{ThemeResource TreeViewItemMinHeight}" />
        <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
        <Setter Property="UseSystemFocusVisuals" Value="False" />
        <Setter Property="FocusVisualMargin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeViewItem">
                    <Grid x:Name="ContentPresenterGrid" MinHeight="40" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Margin="0" Padding="6,0,0,0" CornerRadius="0">

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />

                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenterGrid.Background" Value="{ThemeResource MouseHoverBackgroundBrush}" />
                                        <Setter Target="ContentPresenterGrid.BorderBrush" Value="{ThemeResource MouseHoverBackgroundBrush}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenterGrid.Background" Value="{ThemeResource MouseHoverBackgroundBrush}" />
                                        <Setter Target="ContentPresenterGrid.BorderBrush" Value="{ThemeResource MouseHoverBackgroundBrush}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Selected">
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenterGrid.Background" Value="{ThemeResource SelectedBackgroundBrush}" />
                                        <Setter Target="ContentPresenterGrid.BorderBrush" Value="{ThemeResource SelectedBackgroundBrush}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Disabled"/>

                                <VisualState x:Name="PointerOverSelected">
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenterGrid.Background" Value="{ThemeResource SelectedBackgroundBrush}" />
                                        <Setter Target="ContentPresenterGrid.BorderBrush" Value="{ThemeResource SelectedBackgroundBrush}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="PressedSelected">
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenterGrid.Background" Value="{ThemeResource SelectedBackgroundBrush}" />
                                        <Setter Target="ContentPresenterGrid.BorderBrush" Value="{ThemeResource SelectedBackgroundBrush}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="SelectedDisabled"/>

                                <VisualState x:Name="ReorderedPlaceholder">
                                    <Storyboard>
                                        <FadeOutThemeAnimation TargetName="MultiSelectGrid" />
                                    </Storyboard>
                                </VisualState>

                            </VisualStateGroup>
                            <VisualStateGroup x:Name="TreeViewMultiSelectStates">
                                <VisualState x:Name="TreeViewMultiSelectDisabled" />
                                <VisualState x:Name="TreeViewMultiSelectEnabledUnselected">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevron.Padding" Value="0,0,14,0" />
                                        <Setter Target="ContentPresenterGrid.Padding" Value="0" />

                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="TreeViewMultiSelectEnabledSelected">
                                    <VisualState.Setters>
                                        <Setter Target="MultiSelectGrid.Background" Value="{ThemeResource TreeViewItemBackgroundSelected}" />
                                        <Setter Target="MultiSelectGrid.BorderBrush" Value="{ThemeResource TreeViewItemMultiSelectBorderBrushSelected}" />
                                        <Setter Target="ExpandCollapseChevron.Padding" Value="0,0,14,0" />
                                        <Setter Target="ContentPresenterGrid.Padding" Value="0" />

                                    </VisualState.Setters>
                                </VisualState>

                            </VisualStateGroup>

                            <VisualStateGroup x:Name="DragStates"/>

                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="MultiSelectGrid" Margin="{ThemeResource TreeViewItemMultiSelectSelectedItemBorderMargin}" Padding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TreeViewItemTemplateSettings.Indentation}" BorderBrush="Transparent" BorderThickness="{ThemeResource TreeViewItemBorderThemeThickness}" CornerRadius="{ThemeResource ControlCornerRadius}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="24" />
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid x:Name="ExpandCollapseChevron" Grid.Column="0" Padding="0" Opacity="{TemplateBinding GlyphOpacity}" Background="Transparent">
                                <TextBlock x:Name="CollapsedGlyph" Foreground="#333" 
                                                   Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TreeViewItemTemplateSettings.CollapsedGlyphVisibility}"
                                                   FontSize="16" Text="&#xec0a;" FontFamily="{StaticResource iconfont}" Padding="2" VerticalAlignment="Center" AutomationProperties.AccessibilityView="Raw" IsTextScaleFactorEnabled="False" IsHitTestVisible="False" />
                                <TextBlock x:Name="ExpandedGlyph" Foreground="#333" 
                                                   Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TreeViewItemTemplateSettings.ExpandedGlyphVisibility}"
                                                   FontSize="16" Text="&#xec0b;" FontFamily="{StaticResource iconfont}" Padding="2" VerticalAlignment="Center" AutomationProperties.AccessibilityView="Raw" IsTextScaleFactorEnabled="False" IsHitTestVisible="False" />
                            </Grid>
                            <Image Grid.Column="1" HorizontalAlignment="Left" Source="/Assets/folder.png" Stretch="None"/>
                            <ContentPresenter x:Name="ContentPresenter" Grid.Column="2" TextWrapping="Wrap" 
                                              ContentTransitions="{TemplateBinding ContentTransitions}" ContentTemplate="{TemplateBinding ContentTemplate}" 
                                              Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                              MinHeight="{ThemeResource TreeViewItemContentHeight}"
                                              Margin="{TemplateBinding Padding}" />
                            <!--
                            <Button Grid.Column="2" Command="{x:Bind local:TreeViewForm.TestCommand}" CommandParameter="{x:Bind}" Content="test is a button">
                                <ToolTipService.ToolTip>
                                    <ToolTip Content="这是一个纯粹的、独立的测试按钮"/>
                                </ToolTipService.ToolTip>
                            </Button>
                            -->
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HometPageListBoxItemStyle" TargetType="ListBoxItem">
        <Setter Property="TabNavigation" Value="Local" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="UseSystemFocusVisuals" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid x:Name="LayoutRoot" Background="Transparent" BorderThickness="0" Padding="0,0,12,0">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled"/>
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{StaticResource InfoissueItemHoverBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Selected"/>
                                <VisualState x:Name="SelectedUnfocused"/>
                                <VisualState x:Name="SelectedPointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{StaticResource InfoissueItemHoverBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="SelectedPressed"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border Name="Bd" Padding="8">
                            <Border.RenderTransform>
                                <TransformGroup>
                                    <TranslateTransform X="0" Y="0"/>
                                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                                </TransformGroup>
                            </Border.RenderTransform>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20"></ColumnDefinition>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                    <ColumnDefinition Width="auto"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Ellipse HorizontalAlignment="Center" Name="Dot" Width="6" Height="6" Fill="{ThemeResource InfoissueSkinColorBrush}"></Ellipse>
                                <TextBlock HorizontalAlignment="Center" Name="TopPin" Visibility="Collapsed" Foreground="OrangeRed" Text="&#xe662;" FontFamily="{StaticResource iconfont}"></TextBlock>
                                <TextBlock Grid.Column="1" TextWrapping="Wrap">
                                        <Hyperlink UnderlineStyle="None" TextDecorations="None" NavigateUri="{Binding Url}" Click="InfoissueList_Title_Click">
                                            <Run Text="{Binding Title}"></Run>
                                        </Hyperlink>
                                </TextBlock>
                                <TextBlock Grid.Column="2" HorizontalAlignment="Right" Foreground="#808080" Text="{Binding IssueDateDisplay}"></TextBlock>
                            </Grid>
                        </Border>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="IconOnlyRadioButtonStyle" TargetType="RadioButton">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="MinWidth" Value="24" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="UseSystemFocusVisuals" Value="False" />
        <Setter Property="FocusVisualMargin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid x:Name="RootGrid" Padding="0">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.Background" Value="{StaticResource MouseHoverBackgroundBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.Background" Value="{StaticResource MouseHoverBackgroundBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>                                             
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="CheckStates">

                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Bk" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.3"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Bk" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.3"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate" />

                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Rectangle Name="Bk" Fill="{ThemeResource SelectedBackgroundBrush}" Opacity="0" RadiusX="2" RadiusY="2"/>
                        <TextBlock x:Name="MainIcon" Margin="6" Text="{TemplateBinding Tag}" FontFamily="{StaticResource iconfont}" Foreground="{ThemeResource SkinedTextColor}"/>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--菜单页面的“新建项”的样式-->
    <Style x:Key="CreateNewListBoxItemStyle" TargetType="ListBoxItem">
        <Setter Property="TabNavigation" Value="Local" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="UseSystemFocusVisuals" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid x:Name="LayoutRoot" Background="Transparent" BorderThickness="0" Padding="16,10,16,10" MinHeight="28">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled"/>
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{StaticResource MouseHoverBackgroundBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{StaticResource SelectedBackgroundBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{StaticResource SelectedBackgroundBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{StaticResource SelectedBackgroundBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="SelectedPointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{StaticResource SelectedBackgroundBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="SelectedPressed">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{StaticResource SelectedBackgroundBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <TextBlock Grid.Column="1" TextWrapping="Wrap" Text="{Binding Name}"/>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--只修改了背景色、Padding-->
    <Style x:Key="BINFlyoutPresenterStyle" TargetType="FlyoutPresenter">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="#eaeaea" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="0,0,0,10" />
        <Setter Property="MinWidth" Value="{ThemeResource FlyoutThemeMinWidth}" />
        <Setter Property="MaxWidth" Value="{ThemeResource FlyoutThemeMaxWidth}" />
        <Setter Property="MinHeight" Value="{ThemeResource FlyoutThemeMinHeight}" />
        <Setter Property="MaxHeight" Value="{ThemeResource FlyoutThemeMaxHeight}" />
        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Auto" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
        <Setter Property="CornerRadius" Value="4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="FlyoutPresenter">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" BackgroundSizing="InnerBorderEdge">
                        <ScrollViewer x:Name="ScrollViewer"
                ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}"
                HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                AutomationProperties.AccessibilityView="Raw">
                            <ContentPresenter Content="{TemplateBinding Content}"
                  ContentTemplate="{TemplateBinding ContentTemplate}"
                  ContentTransitions="{TemplateBinding ContentTransitions}"
                  Margin="{TemplateBinding Padding}"
                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </ScrollViewer>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BINHyperlinkButtonStyle" TargetType="HyperlinkButton">
        <Setter Property="BackgroundSizing" Value="OuterBorderEdge" />
        <Setter Property="Foreground" Value="{ThemeResource HyperlinkButtonForeground}" />
        <Setter Property="BorderBrush" Value="{ThemeResource HyperlinkButtonBorderBrush}" />
        <Setter Property="BorderThickness" Value="{ThemeResource HyperlinkButtonBorderThemeThickness}" />
        <Setter Property="Padding" Value="{ThemeResource ButtonPadding}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
        <Setter Property="UseSystemFocusVisuals" Value="True" />
        <Setter Property="FocusVisualMargin" Value="-3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="HyperlinkButton">
                    <ContentPresenter x:Name="ContentPresenter" Background="{TemplateBinding Background}" BackgroundSizing="{TemplateBinding BackgroundSizing}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Content="{TemplateBinding Content}" ContentTransitions="{TemplateBinding ContentTransitions}" ContentTemplate="{TemplateBinding ContentTemplate}" Padding="{TemplateBinding Padding}" CornerRadius="{TemplateBinding CornerRadius}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw">
                        <ContentPresenter.BackgroundTransition>
                            <BrushTransition Duration="0:0:0.083" />
                        </ContentPresenter.BackgroundTransition>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />

                                <!--注意：故意不要这个效果的，因为这个按钮用于“全部菜单”页面，位于一个ListViewItem里面，ListViewItem本身有Hover效果-->
                                <VisualState x:Name="PointerOver"/>

                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </ContentPresenter>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BINExpandHyperlinkButtonStyle" TargetType="HyperlinkButton">
        <Setter Property="Background" Value="{ThemeResource HyperlinkButtonBackground}" />
        <Setter Property="BackgroundSizing" Value="OuterBorderEdge" />
        <Setter Property="Foreground" Value="{ThemeResource HyperlinkButtonForeground}" />
        <Setter Property="BorderBrush" Value="{ThemeResource HyperlinkButtonBorderBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="UseSystemFocusVisuals" Value="False" />
        <Setter Property="FocusVisualMargin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="HyperlinkButton">
                    <ContentPresenter x:Name="ContentPresenter" Background="Transparent"
                                      BackgroundSizing="{TemplateBinding BackgroundSizing}" BorderBrush="{TemplateBinding BorderBrush}" 
                                      BorderThickness="{TemplateBinding BorderThickness}" 
                                      Content="{TemplateBinding Content}" 
                                      ContentTransitions="{TemplateBinding ContentTransitions}" 
                                      ContentTemplate="{TemplateBinding ContentTemplate}" 
                                      Padding="6" 
                                      CornerRadius="0" 
                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                                      AutomationProperties.AccessibilityView="Raw">
                        <ContentPresenter.BackgroundTransition>
                            <BrushTransition Duration="0:0:0.083" />
                        </ContentPresenter.BackgroundTransition>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource SkinedTextColor}"/>
                                        <Setter Target="ContentPresenter.Background" Value="{ThemeResource MouseHoverBackgroundBrush}"/>
                                    </VisualState.Setters>                                        
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource SkinedTextColor}"/>
                                        <Setter Target="ContentPresenter.Background" Value="{ThemeResource MouseHoverBackgroundBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </ContentPresenter>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BINFavToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="BackgroundSizing" Value="InnerBorderEdge" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="UseSystemFocusVisuals" Value="False" />
        <Setter Property="FocusVisualMargin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Name="Bd" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <Grid.BackgroundTransition>
                            <BrushTransition Duration="0:0:0.2" />
                        </Grid.BackgroundTransition>

                        <TextBlock Name="Icon" FontFamily="{StaticResource iconfont}" HorizontalTextAlignment="Center" VerticalAlignment="Center" Text="&#xe73c;" Foreground="#cacaca"/>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="Bd.Background" Value="{ThemeResource MouseHoverBackgroundBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                                <VisualState x:Name="Checked">
                                    <VisualState.Setters>
                                        <Setter Target="Icon.Foreground" Value="#fcd468"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="CheckedPointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="Bd.Background" Value="{ThemeResource MouseHoverBackgroundBrush}"/>
                                        <Setter Target="Icon.Foreground" Value="#fcd468"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="CheckedPressed">
                                    <VisualState.Setters>
                                        <Setter Target="Bd.Background" Value="{ThemeResource MouseHoverBackgroundBrush}"/>
                                        <Setter Target="Icon.Foreground" Value="#fcd468"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="CheckedDisabled"/>
                                <VisualState x:Name="Indeterminate"/>
                                <VisualState x:Name="IndeterminatePointerOver"/>
                                <VisualState x:Name="IndeterminatePressed"/>
                                <VisualState x:Name="IndeterminateDisabled"/>
                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="BINCheckBoxStyle" TargetType="CheckBox">
        <Setter Property="Background" Value="{ThemeResource CheckBoxBackgroundUnchecked}" />
        <Setter Property="Foreground" Value="{ThemeResource CheckBoxForegroundUnchecked}" />
        <Setter Property="BorderBrush" Value="{ThemeResource CheckBoxBorderBrushUnchecked}" />
        <Setter Property="Padding" Value="{StaticResource CheckBoxPadding}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
        <Setter Property="MinWidth" Value="{StaticResource CheckBoxMinWidth}" />
        <Setter Property="MinHeight" Value="{StaticResource CheckBoxHeight}" />
        <Setter Property="UseSystemFocusVisuals" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid x:Name="RootGrid" Padding="2,2,10,2">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CombinedStates">
                                <VisualState x:Name="UncheckedNormal">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalRectangle" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#a0a0a0" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalRectangle" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="White" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="UncheckedPointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SkinedTextColor}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalRectangle" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SkinedTextColor}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ColorAnimation Duration="0:0:0.2" To="White" Storyboard.TargetName="NormalRectangle" Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="UncheckedPressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SkinedTextColor}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalRectangle" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="YellowGreen" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalRectangle" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="YellowGreen" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="UncheckedDisabled"/>
                                <VisualState x:Name="CheckedNormal">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#000" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalRectangle" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectedAndHoverBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalRectangle" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectedAndHoverBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetName="BlastWave" Storyboard.TargetProperty="Opacity"/>
                                        <DoubleAnimation Duration="0:0:0.2" To="5" Storyboard.TargetName="BlastWave" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"/>
                                        <DoubleAnimation Duration="0:0:0.2" To="5" Storyboard.TargetName="BlastWave" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"/>
                                        <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetName="CheckedIcon" Storyboard.TargetProperty="Opacity"/>
                                        <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetName="CheckedIcon" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="CheckedPointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="BlastWave.Visibility" Value="Visible"/>
                                    </VisualState.Setters>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SkinedTextColor}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalRectangle" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SkinedTextColor}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalRectangle" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectedAndHoverBorderBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <!--
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="#f2f2f2" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="BorderBrush">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="#cacaca" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalRectangle" Storyboard.TargetProperty="Fill">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="OrangeRed" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetName="BlastWave" Storyboard.TargetProperty="Opacity"/>
                                                <ColorAnimation Duration="0:0:0.2" To="{ThemeResource SelectedAndHoverBorderBrush}" Storyboard.TargetName="NormalRectangle" Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)"/>
                                                -->
                                        <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetName="BlastWave" Storyboard.TargetProperty="Opacity">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Duration="0:0:0.2" To="5" Storyboard.TargetName="BlastWave" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"/>
                                        <DoubleAnimation Duration="0:0:0.2" To="5" Storyboard.TargetName="BlastWave" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"/>
                                        <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetName="CheckedIcon" Storyboard.TargetProperty="Opacity"/>
                                        <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetName="CheckedIcon" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="CheckedPressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SkinedTextColor}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#efefef" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#cacaca" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalRectangle" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="OrangeRed" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalRectangle" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="YellowGreen" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="CheckedDisabled"/>
                                <VisualState x:Name="IndeterminateNormal"/>
                                <VisualState x:Name="IndeterminatePointerOver"/>
                                <VisualState x:Name="IndeterminatePressed"/>
                                <VisualState x:Name="IndeterminateDisabled"/>

                                <VisualStateGroup.Transitions>
                                    <VisualTransition To="CheckedPointerOver" GeneratedDuration="0:0:0">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <QuadraticEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                    <VisualTransition To="UncheckedPointerOver" GeneratedDuration="0:0:0">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <QuadraticEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0" VerticalAlignment="Center" Height="24" Width="24" Margin="4,0,0,0">
                            <Ellipse Name="BlastWave" Visibility="Collapsed" Opacity="1" Fill="CornflowerBlue" RenderTransformOrigin="0.5,0.5">
                                <Ellipse.RenderTransform>
                                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                                </Ellipse.RenderTransform>
                            </Ellipse>
                            <Rectangle x:Name="NormalRectangle" Fill="White" Stroke="#cacaca" StrokeThickness="1" UseLayoutRounding="False"  RadiusX="2" RadiusY="2" />
                            <TextBlock x:Name="CheckedIcon" Opacity="0" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White" FontSize="14" FontFamily="{StaticResource iconfont}" Text="&#xe743;">
                                <TextBlock.RenderTransform>
                                    <RotateTransform Angle="-90"/>
                                </TextBlock.RenderTransform>
                            </TextBlock>
                        </Grid>
                        <ContentPresenter x:Name="ContentPresenter" Grid.Column="1" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" TextWrapping="Wrap" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="BINCheckBox" TargetType="CheckBox">
        <Setter Property="Padding" Value="{StaticResource CheckBoxPadding}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
        <Setter Property="MinWidth" Value="{StaticResource CheckBoxMinWidth}" />
        <Setter Property="MinHeight" Value="{StaticResource CheckBoxHeight}" />
        <Setter Property="UseSystemFocusVisuals" Value="False" />
        <Setter Property="FocusVisualMargin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid x:Name="RootGrid"
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="{TemplateBinding CornerRadius}" >

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CombinedStates">

                                <VisualState x:Name="UncheckedNormal">
                                    <VisualState.Setters>
                                        <Setter Target="CheckedIcon.Visibility" Value="Collapsed" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="UncheckedPointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="NormalRectangle.Fill" Value="#fafafa" />
                                        <Setter Target="NormalRectangle.Stroke" Value="{ThemeResource SkinedTextColor}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <!--指未check状态下，点鼠标、并且按住不放的时候-->
                                <VisualState x:Name="UncheckedPressed"/>

                                <VisualState x:Name="UncheckedDisabled"/>

                                <VisualState x:Name="CheckedNormal">
                                    <VisualState.Setters>
                                        <Setter Target="CheckedIcon.Visibility" Value="Visible" />
                                    </VisualState.Setters>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalRectangle" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SkinedTextColor}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalRectangle" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SkinedTextColor}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedIcon" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="0" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <!--
                                        <DoubleAnimation Storyboard.TargetName="CheckedIcon" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" From="-90" To="0" />
                                        -->
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="CheckedPointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="CheckedIcon.Visibility" Value="Visible" />
                                    </VisualState.Setters>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalRectangle" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SkinedTextColor}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalRectangle" Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SkinedTextColor}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedIcon" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="0" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <!--
                                        <DoubleAnimation Storyboard.TargetName="CheckedIcon" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" From="-90" To="0" />
                                        -->
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="CheckedPressed">
                                </VisualState>
                                <VisualState x:Name="CheckedDisabled"/>
                                <VisualState x:Name="IndeterminateNormal"/>
                                <VisualState x:Name="IndeterminatePointerOver"/>
                                <VisualState x:Name="IndeterminatePressed"/>
                                <VisualState x:Name="IndeterminateDisabled"/>

                                <VisualStateGroup.Transitions>
                                    <VisualTransition To="CheckedNormal" GeneratedDuration="0:0:0.3"/>
                                    <VisualTransition From="UncheckedPointerOver" To="CheckedPointerOver" GeneratedDuration="0:0:0.3">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <ElasticEase EasingMode="EaseIn"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>

                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0" VerticalAlignment="Center" Height="24" Width="24">
                            <Rectangle x:Name="NormalRectangle" Fill="Transparent" Stroke="#cacaca" StrokeThickness="1" UseLayoutRounding="False"
                                       RadiusX="2" RadiusY="2" />
                            <TextBlock x:Name="CheckedIcon" FontSize="16" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Center" HorizontalTextAlignment="Center" Visibility="Collapsed" Foreground="White" FontFamily="{StaticResource iconfont}" Text="&#xe743;">
                                <TextBlock.RenderTransform>
                                    <RotateTransform Angle="-90"/>
                                </TextBlock.RenderTransform>
                            </TextBlock>
                        </Grid>
                        <ContentPresenter x:Name="ContentPresenter" Grid.Column="1" ContentTemplate="{TemplateBinding ContentTemplate}" 
                                          ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                          AutomationProperties.AccessibilityView="Raw" TextWrapping="Wrap" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
